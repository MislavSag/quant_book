# Introduction

## Becktesting engine (Quantconnect)

In most cases, you will use a backtesting engine to test your trading strategies. A backtesting engine is a software that simulates the performance of a trading strategy on historical data. There are many backtesting engines available. We mostly use Quantconnect.

Quantconnect is cloud platform for quant research and trading based on LEAN engine, which is open source. It supports backtesting and live trading. It is written in C# and supports python. It has a lot of data sources, and it is relatively easy to use. It is a perfect environment for backtesting trading strategies and simple migration to paper/live trading.

Similar, to programming languages, we want to teach you how to use Quantconnect. Here are some recommendations:

- register as a new user on Quantconnect, [homepage](https://www.quantconnect.com/){target="_blank"}
- go through bootcamps that can be found on Quantconnect site by clicking on Algorithm Lab > Learning Center,
- go through You Tube [video series](https://www.youtube.com/playlist?list=PLgWn81pQ2CNKcuUgFosE5YlfJvIZmbVG8){target="_blank"},
- Read the Quantconnect [documentation](https://www.quantconnect.com/docs/v2/writing-algorithms){target="_blank"}

It is not necessary to go into details. The recommendation is to start with equity for the beginning. Later you can try with options/futures or some other asset classes. You can use python and C#, but we recommend to use python. Python is much more used in finance, and it has numerous packages that make your job easier.

Except Quantconnect, there are other backtesting platforms. Here are some for information, you can check them if you want:

- [Zorro](https://zorro-project.com/ (C i C++)){target="_blank"} - Writing fast trading strategies in C-lite or C++,
- [Natulius trader](https://nautilustrader.io/){target="_blank"} - write trading strategies in python or rust,
- [Backtrader](https://www.backtrader.com/){target="_blank"} - very popular backtesting engine written in pure python,
- [Vectorbt](https://vectorbt.dev/){target="_blank"} - vectorized backtester in python,
- Some people develop their own backtester, but we don't recommend it for beginners, except for simple strategies that include loops for quick analysis.


## Programming languages

The most used programming language in the world of finance is Python. It is a high-level programming language that is relatively easy to learn and use. Other popular programming languages in finance include R, C++, Java, and MATLAB. In our researching process, backtesting and deployment, we mostly use R, python and, occasionally, C++. Learning one of these languages is a must for every quant. The more languages you know, the more versatile you are.

We can't teach you any of these languages in this book. We can only give you some recommendations on how to learn them. We recommend to start with Python, as it is the most used language in finance. You can learn it through online tutorials, books, or courses. There are plenty of sources online. It also depends on your preferences, watch videos read books... 

If you are a beginner, we recommend to start with [DataCamp](https://www.datacamp.com/) . It has a lot of courses for beginners and advanced users. Second, don't just learn the language, start developing strategies as soon as possible. The best way to learn a programming language is by using it. Just start the project in your favorite IDE (say VS code) and start coding.

If you prefer R, we recommend you to start learn following packages:
- data.table - for all data wrangling tasks. It is faster than dplyr in R and pandas in python and uses less memory.
- ggplot - for visualization.
- PerformanceAnalytics - for calculating various portfolio or individual stock performances.
- runner - for creating rolling and expanding windows. Here only one function is important.
- lubridate - for working with times in R (converting time zones and similar).
- mlr3 (optional, if you use ML, [@mlr3book]) - Something like scikit learn in python.
- Rcpp (optional, if you want to use c++ within R).
- The biggest advantage of R is the rich set of statistical packages that are already developed. By simply googling you can quickly find a lot of information. You need GARCH? Use ugarch package. You need ARIMA? Use forecast package. You need to calculate VaR? Use rugarch package. And so on.

All above packages are learned continuously, through the development of strategies and projects. Every day you learn something new.

## Data

List of vendors are available on the [link](https://miltonfmr.com/historical-data-vendor-list/#){target="_blank"}

We would like to add two more sources:

- [Databento](https://databento.com/){target="_blank"} - new data provider for very quality and granular market data.
- [Financial Modeling Prep](https://financialmodelingprep.com/){target="_blank"} (FMP) - free and paid data provider for various type of data.

We use daily and hour OHLCV (open, high, low, close price, volume) data from Algoseek (bought from Quantconnect) and minute data from Databento. We also use fundamental data from FMP.


## Start developing strategies as soon as possible

Except learning programming languages and backtesting engines, you should start developing strategies as soon as possible. The best way to learn is by working. When you start developing strategies, start with simple ones. The more complex the strategy, the more difficult it is to debug and understand. We will give you some recommendations on how to start developing strategies in next section.

Your task would be to develope:
1) an existing strategy for you to study and potentially improve (we can discuss together how it can be improved). 
2) a new strategy that you can test through a script/notebook in a programming language of your choice and/or Quantconnect.


## Synchronization through syncthing

We use syncthing for synchronization of files between team members. It is a decentralized file synchronization tool that is very easy to use. It is open source and free. You can download it from https://syncthing.net/. It is available for all operating systems.

Here are the steps you need to do to start using syncthing and synchronize with our server:

- Download syncthing on the [link](https://syncthing.net/downloads/){target="_blank"}. Read this Getting started [guide](https://docs.syncthing.net/intro/getting-started.html){target="_blank"} to learn how to download and use it.
- After you download it, start it. You will see a web interface in your browser.

## Literature review

For econometrics, we recommend the book @Wooldridge2019. It is a very good book for beginners. If you prefer you tube videos, we recommend Ben Lamberts- [videos](https://www.youtube.com/@SpartacanUsuals){target="_blank"}.

Financial econometrics applies statistical methods on financial time series. There are many books and papers that you can read. For the beginners we recommend the book @Hurn2019. 

Stock prices and stock returns are just ralizations of time series. There are many time series introduction books. For more advances (nonlinear) time series, we recommend @Fan2019.

For ML and deep learning introductions we recommend Ng's courses on [Coursera](https://www.coursera.org/specializations/machine-learning-introduction?action=enroll&utm_campaign=WebsiteCourses-MLS-TopButton-mls-launch-2022&utm_medium=institutions&utm_source=deeplearning-ai){target="_blank"} @Coursera2024 and [DeepLearning.ai](https://www.deeplearning.ai/). For applied approach try with @Fastai2024.

